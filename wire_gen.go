// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-playground/validator/v10"
	"github.com/google/wire"
	"golang/rest-api-presensi/app"
	"golang/rest-api-presensi/controller"
	"golang/rest-api-presensi/middleware"
	"golang/rest-api-presensi/repository"
	"golang/rest-api-presensi/service"
	"net/http"
)

// Injectors from injector.go:

func InitializedServer() *http.Server {
	userRepositoryImpl := repository.NewUserRepositoryImpl()
	db := app.GetConnection()
	validate := validator.New()
	userServiceImpl := service.NewUserService(userRepositoryImpl, db, validate)
	userControllerImpl := controller.NewUserControllerImpl(userServiceImpl)
	router := app.NewRouter(userControllerImpl)
	authMiddleware := middleware.NewAuthMiddleware(router)
	server := NewServer(authMiddleware)
	return server
}

// injector.go:

var userSet = wire.NewSet(repository.NewUserRepositoryImpl, wire.Bind(new(repository.UserRepository), new(*repository.UserRepositoryImpl)), service.NewUserService, wire.Bind(new(service.UserService), new(*service.UserServiceImpl)), controller.NewUserControllerImpl, wire.Bind(new(controller.UserController), new(*controller.UserControllerImpl)))
